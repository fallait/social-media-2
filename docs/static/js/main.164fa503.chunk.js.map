{"version":3,"sources":["components/Post.module.css","components/Navbar.module.css","components/Profile.module.css","components/App.module.css","components/Header.module.css","components/Header.js","utils/publicUrl.js","components/Post.js","utils/timespan.js","components/Home.js","components/Explore.js","components/NewPost.js","components/Activity.js","components/Profile.js","components/Navbar.js","utils/initialStore.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","css","header","src","alt","assetPath","process","Post","props","post","user","to","id","publicUrl","photo","content","imgContainer","actions","likes","self","onClick","onUnlike","onLike","activity","count","comments","userId","desc","map","comment","i","key","text","time","date","seconds","Math","floor","Date","interval","timespan","datetime","toUpperCase","findUser","store","users","find","findComments","filter","postId","findLikes","postLikes","like","some","currentUserId","length","Home","posts","sort","a","b","Explore","NewPost","Activity","Profile","userData","d","followers","following","followerId","bio","name","statsNum","statsTitles","Navbar","handleNavChange","page","console","log","onNavChange","navbar","navItem","e","email","App","state","initialStore","addLike","bind","removeLike","this","setState","toISOString","concat","container","renderMain","setPage","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.164fa503.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3-C8n\",\"header\":\"Post_header__3rPny\",\"user\":\"Post_user__30w6L\",\"content\":\"Post_content__1Sr3E\",\"imgContainer\":\"Post_imgContainer__27z5E\",\"actions\":\"Post_actions__3Qy3R\",\"activity\":\"Post_activity__2717Z\",\"likes\":\"Post_likes__28M09\",\"time\":\"Post_time__iC6DS\",\"comments\":\"Post_comments__2LQKC\",\"addComment\":\"Post_addComment__m7TDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2qib_\",\"navItem\":\"Navbar_navItem__3tI0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Profile_user__2-9NF\",\"bio\":\"Profile_bio__CpSPI\",\"statsNum\":\"Profile_statsNum__1rJQS\",\"statsTitles\":\"Profile_statsTitles__36ivN\",\"posts\":\"Profile_posts__-FmA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1h5gR\",\"content\":\"App_content__2Xkxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3vt5U\"};","import React from 'react';\n// import publicUrl from 'utils/publicUrl';\nimport css from './Header.module.css';\nfunction Header() {\n  return (\n    <header className={css.header}>\n        <div>\n          <button>\n            <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fcamera.svg?v=1614382899995\" alt=\"camera\"/>\n          </button>\n        </div>\n        <div>\n          <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flogo.png?v=1614382900226\" alt=\"logo\"/>\n        </div>\n        <div>\n          <button>\n          <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fmessage.svg?v=1614382900322\" alt=\"message\"/>\n          </button>\n        </div>\n        \n    </header>\n  );\n}\n\nexport default Header;\n","// utils/publicUrl.js\nexport default (assetPath)=>{\n    return process.env.PUBLIC_URL+assetPath;\n}","import React from \"react\";\nimport css from \"./Post.module.css\";\nimport timespan from \"utils/timespan.js\";\nimport publicUrl from \"utils/publicUrl.js\";\n\n\nfunction Post(props) {\n  function handleLike() {\n    props.onLike(props.post.id);\n  }\n  \n  function handleUnlike() {\n    props.onUnlike(props.post.id);\n  }\n  return (\n    <article className={css.post}>\n      <header className={css.header}>\n        <button className={css.user} to={`/profile/${props.user.id}`}>\n          <img src={publicUrl(props.user.photo)} alt=\"User Profile\" />\n          <span>{props.user.id} </span>\n        </button>\n      </header>\n      <section className={css.content}>\n        <div className={css.imgContainer}>\n          <img src={publicUrl(props.post.photo)} alt=\"Post\" />\n        </div>\n      </section>\n\n      <section className={css.actions}>\n        <button>\n          {props.likes.self ? (\n            <img\n              onClick={handleUnlike}\n              src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Funlike.svg?v=1614382900439\"\n              alt=\"Unlike Action\"\n            />\n          ) : (\n            <img\n              onClick={handleLike}\n              src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flike.svg?v=1614382900207\"\n              alt=\"Like Action\"\n            />\n          )}\n        </button>\n        <button>\n          <img\n            src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fcomment.svg?v=1614382900046\"\n            alt=\"Comment Action\"\n          />\n        </button>\n      </section>\n      <section className={css.activity}>\n        <div className={css.likes}>{props.likes.count} likes</div>\n        <div className={css.comments}>\n          <div>\n            <span>\n              {props.post.userId}\n            </span>\n            <span>{props.post.desc}</span>\n          </div>\n          {props.comments.map((comment, i) => (\n            <div key={i}>\n              <span>\n                {comment.userId}\n              </span>\n              <span>{comment.text}</span>\n            </div>\n          ))}\n        </div>\n        <time className={css.time}>\n          {timespan(props.post.datetime).toUpperCase()} AGO\n        </time>\n      </section>\n    </article>\n  );\n}\n\nexport default Post;\n","// return time elapsed \nexport default (date)=>{\n    var seconds = Math.floor((new Date() - new Date(date)) / 1000);\n\n    var interval = Math.floor(seconds / 31556926);\n  \n    if (interval >= 1) {\n      return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval >= 1) {\n      return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n      return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n      return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n}","import React from \"react\";\nimport Post from \"./Post.js\";\n\nfunction findUser(post, store) {\n  return store.users.find(user => user.id === post.userId);\n}\n\nfunction findComments(post, store) {\n  return store.comments.filter(comment => comment.postId === post.id);\n}\n\nfunction findLikes(post, store) {\n  let postLikes = store.likes.filter(like => like.postId === post.id);\n  return {\n    self: postLikes.some(like => like.userId === store.currentUserId),\n    count: postLikes.length\n  }\n}\n\nfunction Home(props) {\n  const { store } = props; // retrieve store\n  return (\n    <div>\n      {store.posts.sort((a, b) => new Date(b.datetime) - new Date(a.datetime))\n        .map(post =>\n          <Post\n            key={post.id}\n            user={findUser(post, store)}\n            post={post}\n            comments={findComments(post, store)}\n            likes={findLikes(post, store)}\n            onLike={props.onLike} \n            onUnlike={props.onUnlike}\n          />)}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction Explore() {\n  return (\n    <h2>\n      Explore       \n    </h2>\n  );\n}\n\nexport default Explore;","import React from 'react';\n\nfunction NewPost() {\n  return (\n    <h2>\n      NewPost       \n    </h2>\n  );\n}\n\nexport default NewPost;","import React from 'react';\n\nfunction Activity() {\n  return (\n    <h2>\n      Activity       \n    </h2>\n  );\n}\n\nexport default Activity;","import React from 'react';\nimport publicUrl from \"utils/publicUrl.js\";\nimport css from \"./Profile.module.css\";\n\nfunction Profile(props) {\n  const { store } = props; // retrieve store\n  let user = store.currentUserId\n  let userData = store.users.filter(d => d.id === user)[0]\n  let posts = store.posts.filter(d => d.userId === user)\n  let followers = store.followers.filter(d => d.userId === user)\n  let following = store.followers.filter(d => d.followerId === user)\n  return (\n    <div>\n      <header className={css.user}>\n        <img src={publicUrl(userData.photo)} alt=\"Propic\"></img>\n        <span>{userData.id} </span>\n      </header>\n      <section className={css.bio}>\n        <b>{userData.name}</b>\n        <p>{userData.bio}</p>\n      </section>\n      <section className={css.statsNum}>\n        <b>{posts.length}</b>\n        <b>{followers.length}</b>\n        <b>{following.length}</b>\n      </section>\n      <section className={css.statsTitles}>\n        <p>posts</p>\n        <p>followers</p>\n        <p>following</p>\n      </section>\n      <section className={css.posts}>\n        {posts.map(post =>\n          <img src={publicUrl(post.photo)}></img>\n\n        )}\n      </section>\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport css from './Navbar.module.css';\n\n\nfunction Navbar(props) {\n    function handleNavChange(page){\n      console.log('page', page);\n        if (props.onNavChange){\n            props.onNavChange(page);\n        }\n    }\n    return (\n        <nav className={css.navbar}>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"home\")}>\n                    <img src='https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fhome.svg?v=1614382900187' alt=\"Home\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"explore\")}>\n                    <img src='https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fexplore.svg?v=1614382900067' alt=\"Explore\"/>\n                </button>\n            </div>\n\t\t\t\t\t\t            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"newpost\")}>\n                    <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fnewpost.svg?v=1614382900337\" alt=\"New Post\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"activity\")}>\n                    <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flike.svg?v=1614382900207\" alt=\"Activity\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"profile\")}>\n                    <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fprofile.svg?v=1614382900375\" alt=\"Profile\"/>\n                </button>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","/* sample data store*/\nexport default { \n    currentUserId: \"judy\",\n    users:[\n        {\n            id:\"judy\",\n            email:\"judy@bc.edu\",\n            photo:\"/assets/user1.png\",\n            name: \"Judy Hopps\",\n            bio:\"The first rabbit officer of the Zootopia Police Department. Judy is determined to make the world a better place while breaking preconceptions about other species.\",\n            \n        },\n        {\n            id:\"nick\",\n            email:\"nick@bc.edu\",\n            photo:\"/assets/user2.png\",\n            name:\"Nick Wilde\",\n            bio:\"Nick is a charming, small-time, con artist fox with a big mouth and a lot of opinions. But when a rabbit cop outsmarts him, he finds himself actually helping her solve a mystery.\"\n        },\n\n        {\n            id:\"flash\",\n            email:\"flash@bc.edu\",\n            photo:\"/assets/user3.png\",\n            name: \"Flash Slothmore\",\n            bio:\"Flash is a male three-toed sloth and a supporting character in Zootopia. He works at the Department of Mammal Vehicles.\",\n            \n        }\n    ],\n    followers:[\n        {\n            userId:\"nick\",\n            followerId:\"judy\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"nick\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"flash\"\n        }\n    ],\n    posts:[\n        {   \n            id:\"post-1\",\n            userId:\"judy\",\n            photo:\"/assets/post1.png\",\n            desc:\"#zootopia #excited\",\n            datetime: \"2020-02-09T22:45:28Z\",   \n\n        },\n        {\n            id:\"post-2\",\n            userId:\"nick\",\n            photo:\"/assets/post2.png\",\n            desc:\"#happy #selfie with Judy\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-3\",\n            userId:\"flash\",\n            photo:\"/assets/post3.png\",\n            desc:\"Don't worry I got this\",\n            datetime: \"2020-02-03T22:45:28Z\",\n        },\n        {\n            id:\"post-4\",\n            userId:\"judy\",\n            photo:\"/assets/post4.png\",\n            desc:\"Just trying to make a #friend\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-5\",\n            userId:\"judy\",\n            photo:\"/assets/post5.png\",\n            desc:\"I am now the first rabbit officer!\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-6\",\n            userId:\"judy\",\n            photo:\"/assets/post6.png\",\n            desc:\"Having #goodtimes with folks here\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n    ],\n    comments:[\n        {\n            userId:\"nick\",\n            postId:\"post-1\",\n            text:\"Welcome to Zootopia!\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            text:\"Thanks!😁Looking forward to meeting you!\", \n            datetime:\"2020-02-09T22:52:01Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            text:\"Looking good you two! 🐰🦊\", \n            datetime:\"2020-02-09T22:54:20Z\"\n        }\n    ],\n    likes:[\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            datetime:\"2020-02-09T22:50:40Z\"\n        },\n        {\n            userId:\"nick\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:54:20Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-3\",\n            datetime:\"2020-02-09T22:53:40Z\"\n        }\n    ]\n}\n\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport css from \"./App.module.css\";\nimport Header from \"./Header.js\";\nimport Home from \"./Home.js\";\nimport Explore from \"./Explore.js\";\nimport NewPost from \"./NewPost.js\";\nimport Activity from \"./Activity.js\";\nimport Profile from \"./Profile.js\";\nimport Navbar from \"./Navbar.js\";\nimport initialStore from 'utils/initialStore';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 'home',\n      store: initialStore // initialize the store as part of the state\n    };\n    this.addLike = this.addLike.bind(this);\n    this.removeLike = this.removeLike.bind(this);\n  }\n  setPage(page) {\n    console.log(this.setState);\n    this.setState({ page });\n  }\n  renderMain(page) {\n    switch (page) {\n      case \"home\":\n        return <Home\n          store={this.state.store}\n          onLike={this.addLike}\n          onUnlike={this.removeLike}\n        />;\n      case \"explore\":\n        return <Explore />;\n      case \"activity\":\n        return <Activity />;\n      case \"newpost\":\n        return <NewPost />;\n      case \"profile\":\n        return <Profile\n          store={this.state.store}\n        />;\n      default:\n        return <Home store={this.state.store}\n          onLike={this.addLike}\n          onUnlike={this.removeLike} />;\n    }\n  }\n\n  addLike(postId) {\n    const like = {\n      userId: this.state.store.currentUserId,\n      postId, // make sure you understand this shorthand syntax\n      datetime: new Date().toISOString()\n    };\n\n    this.setState(state => ({\n      store: {\n        ...state.store,// spread props. make sure you understand this\n        likes: state.store.likes.concat(like)\n      }\n    }));\n  }\n\n  removeLike(postId) {\n    this.setState(state => ({\n      store: {\n        ...state.store,// spread props. make sure you understand this\n        likes: this.state.store.likes.filter(like => !(like.userId === this.state.store.currentUserId && like.postId === postId))\n\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <div className={css.container}>\n        <Header />\n        <main className={css.content}>\n          {this.renderMain(this.state.page)}\n        </main>\n        <Navbar onNavChange={this.setPage.bind(this)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}