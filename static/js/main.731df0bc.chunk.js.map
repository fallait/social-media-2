{"version":3,"sources":["components/NewPost.module.css","components/Profile.module.css","components/Navbar.module.css","components/PostThumbnail.module.css","components/App.module.css","components/Header.module.css","components/Post.module.css","components/Header.js","utils/publicUrl.js","components/Post.js","utils/timespan.js","components/Home.js","components/Explore.js","components/FileLoader.js","components/NewPost.js","components/Activity.js","components/PostThumbnail.js","components/Profile.js","components/Navbar.js","utils/initialStore.js","utils/uniqueId.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","css","header","src","alt","publicUrl","assetPath","startsWith","process","Post","props","useState","comment","setComment","toggleComment","setToggleComment","post","user","to","id","photo","content","imgContainer","actions","likes","self","onClick","onUnlike","onLike","e","activity","count","comments","userId","desc","map","i","key","text","time","date","seconds","Math","floor","Date","interval","timespan","datetime","toUpperCase","addComment","onSubmit","event","onComment","preventDefault","type","placeholder","value","onChange","target","findUser","store","users","find","findComments","filter","postId","findLikes","postLikes","like","some","currentUserId","length","Home","useParams","posts","sort","a","b","Explore","FileLoader","handleDragEnter","bind","handleDrop","handleDragOver","handleDragLeave","stopPropagation","this","onDrop","dragTargetSaved","onDragEnter","dataTransfer","types","includes","onDragOver","onDragLeave","child","React","Children","only","children","cloneElement","PureComponent","NewPost","dragging","setDragging","setDesc","setPhoto","error","setError","history","useHistory","message","files","file","size","match","reader","FileReader","onloadend","result","readAsDataURL","dropArea","join","rows","goBack","addPost","push","Activity","PostThumbnail","square","image","Profile","userData","d","followers","following","followerId","follbool","followers2","console","log","unfollowBtn","onUnfollow","followBtn","onFollow","bio","name","statsNum","statsTitles","Navbar","navbar","navItem","email","prefix","valueOf","toString","milliseconds","start","getTime","sleep","App","initialStore","setStore","basename","container","path","newPost","uniqueId","toISOString","concat","follower","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.731df0bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"NewPost_photo__3ADwB\",\"dropArea\":\"NewPost_dropArea__16uub\",\"dragging\":\"NewPost_dragging__1jFb0\",\"message\":\"NewPost_message__1mugQ\",\"image\":\"NewPost_image__2rlaG\",\"desc\":\"NewPost_desc__2ptNI\",\"actions\":\"NewPost_actions__2IyL0\",\"error\":\"NewPost_error__3uhGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Profile_user__2-9NF\",\"bio\":\"Profile_bio__CpSPI\",\"statsNum\":\"Profile_statsNum__1rJQS\",\"statsTitles\":\"Profile_statsTitles__36ivN\",\"posts\":\"Profile_posts__-FmA9\",\"followBtn\":\"Profile_followBtn__1DYsw\",\"unfollowBtn\":\"Profile_unfollowBtn__d09ZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2qib_\",\"navItem\":\"Navbar_navItem__3tI0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"PostThumbnail_square__-IdW1\",\"content\":\"PostThumbnail_content__yt2pG\",\"image\":\"PostThumbnail_image__48NS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1h5gR\",\"content\":\"App_content__2Xkxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3vt5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3-C8n\",\"header\":\"Post_header__3rPny\",\"user\":\"Post_user__30w6L\",\"content\":\"Post_content__1Sr3E\",\"imgContainer\":\"Post_imgContainer__27z5E\",\"actions\":\"Post_actions__3Qy3R\",\"activity\":\"Post_activity__2717Z\",\"likes\":\"Post_likes__28M09\",\"time\":\"Post_time__iC6DS\",\"comments\":\"Post_comments__2LQKC\",\"addComment\":\"Post_addComment__m7TDd\"};","import React from 'react';\r\n// import publicUrl from 'utils/publicUrl';\r\nimport css from './Header.module.css';\r\nfunction Header() {\r\n  return (\r\n    <header className={css.header}>\r\n        <div>\r\n          <button>\r\n            <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fcamera.svg?v=1614382899995\" alt=\"camera\"/>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flogo.png?v=1614382900226\" alt=\"logo\"/>\r\n        </div>\r\n        <div>\r\n          <button>\r\n          <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fmessage.svg?v=1614382900322\" alt=\"message\"/>\r\n          </button>\r\n        </div>\r\n        \r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","// utils/publicUrl.js\r\nexport default function publicUrl(assetPath) {\r\n    return assetPath.startsWith('/') ? process.env.PUBLIC_URL + assetPath : assetPath;\r\n}","import React, { useState } from \"react\";\r\nimport css from \"./Post.module.css\";\r\nimport timespan from \"utils/timespan.js\";\r\nimport publicUrl from \"utils/publicUrl.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction Post(props) {\r\n\r\n  const [comment, setComment] = useState('');\r\n  const [toggleComment, setToggleComment] = useState(false); // hidden initially\r\n\r\n  function handleLike() {\r\n    props.onLike(props.post.id);\r\n  }\r\n\r\n\r\n  function handleSubmitComment(event) {\r\n    props.onComment(props.post.id, comment); // this calls addComment from App.js\r\n    setComment(''); //reset\r\n    setToggleComment(false); //close comment box\r\n    event.preventDefault(); // prevent page refresh\r\n  }\r\n\r\n  function handleUnlike() {\r\n    props.onUnlike(props.post.id);\r\n  }\r\n\r\n  return (\r\n    <article className={css.post}>\r\n      <header className={css.header}>\r\n        <Link className={css.user} to={`/profile/${props.user.id}`}>\r\n          <img src={publicUrl(props.user.photo)} alt=\"User Profile\" />\r\n          <span>{props.user.id} </span>\r\n        </Link>\r\n      </header>\r\n      <section className={css.content}>\r\n        <div className={css.imgContainer}>\r\n          <img src={publicUrl(props.post.photo)} alt=\"Post\" />\r\n        </div>\r\n      </section>\r\n\r\n      <section className={css.actions}>\r\n        <button>\r\n          {props.likes.self ? (\r\n            <img\r\n              onClick={handleUnlike}\r\n              src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Funlike.svg?v=1614382900439\"\r\n              alt=\"Unlike Action\"\r\n            />\r\n          ) : (\r\n            <img\r\n              onClick={handleLike}\r\n              src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flike.svg?v=1614382900207\"\r\n              alt=\"Like Action\"\r\n            />\r\n          )}\r\n        </button>\r\n        <button onClick={e => setToggleComment(!toggleComment)}>\r\n          <img src={publicUrl('/assets/comment.svg')} alt='Comment Action' />\r\n        </button>\r\n      </section>\r\n      <section className={css.activity}>\r\n        <div className={css.likes}>{props.likes.count} likes</div>\r\n        <div className={css.comments}>\r\n          <div>\r\n            <span>\r\n              <Link className={css.user} to={`/profile/${props.post.userId}`}>\r\n                {props.post.userId}\r\n              </Link>\r\n            </span>\r\n            <span>{props.post.desc}</span>\r\n          </div>\r\n          {props.comments.map((comment, i) => (\r\n            <div key={i}>\r\n              <span>\r\n              <Link className={css.user} to={`/profile/${comment.userId}`}>\r\n                {comment.userId}\r\n                </Link>\r\n              </span>\r\n              <span>{comment.text}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <time className={css.time}>\r\n          {timespan(props.post.datetime).toUpperCase()} AGO\r\n        </time>\r\n      </section>\r\n      {toggleComment &&\r\n        <form className={css.addComment} onSubmit={handleSubmitComment}>\r\n          <input type=\"text\" placeholder=\"Add a comment…\" value={comment} onChange={e => setComment(e.target.value)} />\r\n          <button type=\"submit\">Post</button>\r\n        </form>\r\n      }\r\n    </article>\r\n\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","// return time elapsed \r\nexport default (date)=>{\r\n    var seconds = Math.floor((new Date() - new Date(date)) / 1000);\r\n\r\n    var interval = Math.floor(seconds / 31556926);\r\n  \r\n    if (interval >= 1) {\r\n      return interval + \" years\";\r\n    }\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval >= 1) {\r\n      return interval + \" months\";\r\n    }\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval >= 1) {\r\n      return interval + \" days\";\r\n    }\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval >= 1) {\r\n      return interval + \" hours\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval >= 1) {\r\n      return interval + \" minutes\";\r\n    }\r\n    return Math.floor(seconds) + \" seconds\";\r\n}","import React from \"react\";\r\nimport Post from \"./Post.js\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction findUser(post, store) {\r\n  return store.users.find(user => user.id === post.userId);\r\n}\r\n\r\nfunction findComments(post, store) {\r\n  return store.comments.filter(comment => comment.postId === post.id);\r\n}\r\n\r\nfunction findLikes(post, store) {\r\n  let postLikes = store.likes.filter(like => like.postId === post.id);\r\n  return {\r\n    self: postLikes.some(like => like.userId === store.currentUserId),\r\n    count: postLikes.length\r\n  }\r\n}\r\n\r\nfunction Home(props) {\r\n  let {postId} = useParams();\r\n  const { store } = props; // retrieve store\r\n  return (\r\n    <div>\r\n      {store.posts.filter(post => postId ? post.id === postId : true)\r\n      .sort((a, b) => new Date(b.datetime) - new Date(a.datetime))\r\n        .map(post =>\r\n          <Post\r\n            store = {store}\r\n            key={post.id}\r\n            user={findUser(post, store)}\r\n            post={post}\r\n            comments={findComments(post, store)}\r\n            likes={findLikes(post, store)}\r\n            onLike={props.onLike} \r\n            onUnlike={props.onUnlike}\r\n            onComment={props.onComment}\r\n          />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction Explore() {\r\n  return (\r\n    <h2>\r\n      Explore       \r\n    </h2>\r\n  );\r\n}\r\n\r\nexport default Explore;","  \r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass FileLoader extends PureComponent {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleDragEnter = this.handleDragEnter.bind(this);\r\n\t\tthis.handleDrop = this.handleDrop.bind(this);\r\n\t\tthis.handleDragOver = this.handleDragOver.bind(this);\r\n\t\tthis.handleDragLeave = this.handleDragLeave.bind(this);\r\n\t}\r\n\thandleDrop(e){\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tif (this.props.onDrop){\r\n\t\t\tthis.props.onDrop(e);\r\n\t\t}\r\n\t}\r\n\thandleDragEnter(e){\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tthis.dragTargetSaved=e.target;\r\n\t\tif (this.props.onDragEnter){\r\n\t\t\tthis.props.onDragEnter(e);\r\n\t\t}\r\n\t}\r\n\thandleDragOver(e){\r\n\t\tif (e.dataTransfer.types.includes('Files')===false){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tif (this.props.onDragOver){\r\n\t\t\tthis.props.onDragOver(e);\r\n\t\t}\r\n\t}\r\n\thandleDragLeave(e){\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tif (this.props.onDragLeave &&  this.dragTargetSaved===e.target){\r\n\t\t\tthis.props.onDragLeave(e);\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\tlet child = React.Children.only(this.props.children);\r\n\t\treturn  React.cloneElement(child,\r\n\t\t\t{\t\r\n\t\t\t\tonDragEnter: this.handleDragEnter,\r\n\t\t\t\tonDragOver: this.handleDragOver,\r\n\t\t\t\tonDragLeave: this.handleDragLeave,\r\n\t\t\t\tonDrop: this.handleDrop\r\n\r\n\t\t\t});\r\n\t\r\n\t}\r\n}\r\n\r\nFileLoader.propTypes = {\r\n\tonDrop:PropTypes.func,\r\n\tonDragEnter:PropTypes.func,\r\n\tonDragOver:PropTypes.func,\r\n\tonDragLeave:PropTypes.func,\r\n\tchildren:PropTypes.element.isRequired,\r\n};\r\n\r\nexport default FileLoader;","import React, { useState } from 'react';\r\nimport css from './NewPost.module.css';\r\nimport FileLoader from './FileLoader.js';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nfunction NewPost(props) {\r\n  const [dragging, setDragging] = useState(false); // to show a dragging effect\r\n  const [desc, setDesc] = useState('');\r\n  const [photo, setPhoto] = useState(null);\r\n  const [error, setError] = useState(''); // to show an error message\r\n  const history = useHistory();\r\n\r\n  \r\n  function handleFileDragEnter(e) {\r\n    setDragging(true);\r\n  }\r\n  function handleFileDragLeave(e) {\r\n    setDragging(false);\r\n  }\r\n  function handleFileDrop(e) {\r\n    if (e.dataTransfer.types.includes('Files') === false) {\r\n      return;\r\n    }\r\n    if (e.dataTransfer.files.length >= 1) {\r\n      let file = e.dataTransfer.files[0];\r\n      if (file.size > 1000000) {// larger than 1 MB\r\n        return;\r\n      }\r\n      if (file.type.match(/image.*/)) {\r\n        let reader = new FileReader();\r\n        reader.onloadend = (e) => {\r\n          // TODO: call setPhoto with e.target.result (this is a Base64 image string)\r\n          setPhoto(e.target.result)\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n    setDragging(false);\r\n  }\r\n  function handleDescChange(e) {\r\n    // TODO: call setDesc\r\n    setDesc(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    // TODO:\r\n    // 1. Prevent default behavior\r\n    // 2. Show error msg if failed and exit\r\n    // 3. Call the storage update function passed from the parent\r\n    // 3. Clear error msg\r\n    if (!photo) {\r\n      setError(\"No photo\");\r\n      return;\r\n    }\r\n    props.addPost(photo, desc);\r\n    history.push('/');\r\n    setError(\"\");\r\n  }\r\n  function handleCancel() {\r\n    // TODO: Notify the parent about the cancellation\r\n    history.goBack()\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={css.photo}>\r\n        {!photo ? <div className={css.message}>Drop your image</div> :\r\n          <img src={photo} alt=\"New Post\" />}\r\n        <FileLoader\r\n          onDragEnter={handleFileDragEnter}\r\n          onDragLeave={handleFileDragLeave}\r\n          onDrop={handleFileDrop}\r\n        >\r\n          <div className={[css.dropArea, dragging ? css.dragging : null].join(' ')}\r\n          ></div>\r\n        </FileLoader>\r\n\r\n      </div>\r\n\r\n      <div className={css.desc} >\r\n        <textarea\r\n          placeholder=\"Describe your post!\"\r\n          rows=\"1\"\r\n          value={desc}\r\n          onChange={handleDescChange}\r\n        />\r\n      </div>\r\n      <div className={css.error}>\r\n        {error}\r\n      </div>\r\n      <div className={css.actions}>\r\n        <button onClick={handleCancel}>Cancel</button>\r\n        <button onClick={handleSubmit}>Share</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewPost;","import React from 'react';\r\n\r\nfunction Activity() {\r\n  return (\r\n    <h2>\r\n      Activity       \r\n    </h2>\r\n  );\r\n}\r\n\r\nexport default Activity;","import React from 'react';\r\nimport css from './PostThumbnail.module.css';\r\nimport publicUrl from 'utils/publicUrl';\r\nfunction PostThumbnail(props) {\r\n  return (\r\n    <div className={css.square}>\r\n      <div className={css.content}>\r\n        <img className={css.image} src={publicUrl(props.post.photo)} alt=\"Post Thumbnail\"/>\r\n      </div>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostThumbnail;\r\n","import React from 'react';\r\nimport publicUrl from \"utils/publicUrl.js\";\r\nimport css from \"./Profile.module.css\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport PostThumbnail from \"./PostThumbnail.js\";\r\n\r\nfunction Profile(props) {\r\n  const { store } = props; // retrieve store\r\n  let { userId } = useParams();\r\n  if (!userId){\r\n    userId = store.currentUserId;\r\n  }\r\n  function handleFollow(){\r\n    props.onFollow(userId);\r\n  }\r\n  function handleUnfollow(){\r\n    props.onUnfollow(userId);\r\n  }\r\n  let userData = store.users.filter(d => d.id === userId)[0]\r\n  let posts = store.posts.filter(d=> d.userId === userId)\r\n  let followers = store.followers.filter(d => d.userId === userId)\r\n  let following = store.followers.filter(d => d.followerId === userId)\r\n  let follbool = false;\r\n  let followers2 = followers.map(d=>d.followerId);\r\n  if (followers2.filter(d=>d===store.currentUserId).length>0){\r\n    console.log(followers2.filter(d=>d===store.currentUserId))\r\n    follbool = true;\r\n    //console.log(store.currentUserId);\r\n  }\r\n  return (\r\n    <div>\r\n      <header className={css.user}>\r\n        <img src={publicUrl(userData.photo)} alt=\"Propic\"></img>\r\n        <span>{userData.id} </span>\r\n        {follbool && \r\n        <div>\r\n          <button className={css.unfollowBtn} onClick={handleUnfollow}>Unfollow</button>\r\n          </div>}\r\n          {!follbool && userId != store.currentUserId &&\r\n        <div>\r\n          <button className={css.followBtn} onClick={handleFollow}>Follow</button>\r\n          </div>}\r\n      </header>\r\n      <section className={css.bio}>\r\n        <b>{userData.name}</b>\r\n        <p>{userData.bio}</p>\r\n      </section>\r\n      <section className={css.statsNum}>\r\n        <b>{posts.length}</b>\r\n        <b>{followers.length}</b>\r\n        <b>{following.length}</b>\r\n      </section>\r\n      <section className={css.statsTitles}>\r\n        <p>posts</p>\r\n        <p>followers</p>\r\n        <p>following</p>\r\n      </section>\r\n      <section className={css.posts}>\r\n      {posts.map(post => (\r\n          <Link key={post.id} to={`/${post.id}`}>\r\n            <PostThumbnail post={post} />\r\n          </Link>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport css from './Navbar.module.css';\r\nimport publicUrl from \"utils/publicUrl.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className={css.navbar}>\r\n            <div className={css.navItem}>\r\n                <Link to=\"/\">\r\n                    <img src={publicUrl('/assets/home.svg')} alt=\"Home\" />\r\n                </Link>\r\n            </div>\r\n            <div className={css.navItem}>\r\n                <Link to=\"/explore\">\r\n                    <img src={publicUrl('/assets/explore.svg')} alt=\"Explore\" />\r\n                </Link>\r\n            </div>\r\n            <div className={css.navItem}>\r\n                <Link to=\"/newpost\">\r\n                    <img src={publicUrl('/assets/newpost.svg')} alt=\"New Post\" />\r\n                </Link>\r\n            </div>\r\n            <div className={css.navItem}>\r\n                <Link to=\"/activity\">\r\n                    <img src={publicUrl('/assets/activity.svg')} alt=\"Activity\" />\r\n                </Link>\r\n            </div>\r\n            <div className={css.navItem}>\r\n                <Link to=\"/profile\">\r\n                    <img src={publicUrl('/assets/profile.svg')} alt=\"Profile\" />\r\n                </Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","/* sample data store*/\r\nexport default { \r\n    currentUserId: \"judy\",\r\n    users:[\r\n        {\r\n            id:\"judy\",\r\n            email:\"judy@bc.edu\",\r\n            photo:\"/assets/user1.png\",\r\n            name: \"Judy Hopps\",\r\n            bio:\"The first rabbit officer of the Zootopia Police Department. Judy is determined to make the world a better place while breaking preconceptions about other species.\",\r\n            \r\n        },\r\n        {\r\n            id:\"nick\",\r\n            email:\"nick@bc.edu\",\r\n            photo:\"/assets/user2.png\",\r\n            name:\"Nick Wilde\",\r\n            bio:\"Nick is a charming, small-time, con artist fox with a big mouth and a lot of opinions. But when a rabbit cop outsmarts him, he finds himself actually helping her solve a mystery.\"\r\n        },\r\n\r\n        {\r\n            id:\"flash\",\r\n            email:\"flash@bc.edu\",\r\n            photo:\"/assets/user3.png\",\r\n            name: \"Flash Slothmore\",\r\n            bio:\"Flash is a male three-toed sloth and a supporting character in Zootopia. He works at the Department of Mammal Vehicles.\",\r\n            \r\n        }\r\n    ],\r\n    followers:[\r\n        {\r\n            userId:\"nick\",\r\n            followerId:\"judy\"\r\n        },\r\n        {\r\n            userId:\"judy\",\r\n            followerId:\"nick\"\r\n        },\r\n        {\r\n            userId:\"judy\",\r\n            followerId:\"flash\"\r\n        }\r\n    ],\r\n    posts:[\r\n        {   \r\n            id:\"post-1\",\r\n            userId:\"judy\",\r\n            photo:\"/assets/post1.png\",\r\n            desc:\"#zootopia #excited\",\r\n            datetime: \"2020-02-09T22:45:28Z\",   \r\n\r\n        },\r\n        {\r\n            id:\"post-2\",\r\n            userId:\"nick\",\r\n            photo:\"/assets/post2.png\",\r\n            desc:\"#happy #selfie with Judy\",\r\n            datetime: \"2020-02-06T22:45:28Z\",\r\n        },\r\n        {\r\n            id:\"post-3\",\r\n            userId:\"flash\",\r\n            photo:\"/assets/post3.png\",\r\n            desc:\"Don't worry I got this\",\r\n            datetime: \"2020-02-03T22:45:28Z\",\r\n        },\r\n        {\r\n            id:\"post-4\",\r\n            userId:\"judy\",\r\n            photo:\"/assets/post4.png\",\r\n            desc:\"Just trying to make a #friend\",\r\n            datetime: \"2020-02-06T22:45:28Z\",\r\n        },\r\n        {\r\n            id:\"post-5\",\r\n            userId:\"judy\",\r\n            photo:\"/assets/post5.png\",\r\n            desc:\"I am now the first rabbit officer!\",\r\n            datetime: \"2020-02-06T22:45:28Z\",\r\n        },\r\n        {\r\n            id:\"post-6\",\r\n            userId:\"judy\",\r\n            photo:\"/assets/post6.png\",\r\n            desc:\"Having #goodtimes with folks here\",\r\n            datetime: \"2020-02-06T22:45:28Z\",\r\n        },\r\n    ],\r\n    comments:[\r\n        {\r\n            userId:\"nick\",\r\n            postId:\"post-1\",\r\n            text:\"Welcome to Zootopia!\",\r\n            datetime:\"2020-02-09T22:51:40Z\"\r\n        },\r\n        {\r\n            userId:\"judy\",\r\n            postId:\"post-1\",\r\n            text:\"Thanks!😁Looking forward to meeting you!\", \r\n            datetime:\"2020-02-09T22:52:01Z\"\r\n        },\r\n        {\r\n            userId:\"flash\",\r\n            postId:\"post-2\",\r\n            text:\"Looking good you two! 🐰🦊\", \r\n            datetime:\"2020-02-09T22:54:20Z\"\r\n        }\r\n    ],\r\n    likes:[\r\n        {\r\n            userId:\"judy\",\r\n            postId:\"post-1\",\r\n            datetime:\"2020-02-09T22:50:40Z\"\r\n        },\r\n        {\r\n            userId:\"nick\",\r\n            postId:\"post-2\",\r\n            datetime:\"2020-02-09T22:51:40Z\"\r\n        },\r\n        {\r\n            userId:\"flash\",\r\n            postId:\"post-2\",\r\n            datetime:\"2020-02-09T22:54:20Z\"\r\n        },\r\n        {\r\n            userId:\"judy\",\r\n            postId:\"post-3\",\r\n            datetime:\"2020-02-09T22:53:40Z\"\r\n        }\r\n    ]\r\n}\r\n\r\n","  \r\nfunction sleep(milliseconds) {\r\n\tvar start = new Date().getTime();\r\n\tfor (var i = 0; i < 1e7; i++) {\r\n\t\tif ((new Date().getTime() - start) > milliseconds){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default (prefix) => { // TODO use shortid \r\n\tlet id = new Date().valueOf().toString(36);\r\n\tsleep(1);// wait for one millisecond\r\n\treturn (prefix ? prefix + id\t: id);\r\n};","import React, { useState } from \"react\";\r\n// import logo from './logo.svg';\r\nimport \"./App.css\";\r\nimport css from \"./App.module.css\";\r\nimport Header from \"./Header.js\";\r\nimport Home from \"./Home.js\";\r\nimport Explore from \"./Explore.js\";\r\nimport NewPost from \"./NewPost.js\";\r\nimport Activity from \"./Activity.js\";\r\nimport Profile from \"./Profile.js\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport initialStore from 'utils/initialStore';\r\nimport uniqueId from 'utils/uniqueId'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n  //const [page, setPage] = useState('home');\r\n  const [store, setStore] = useState(initialStore);\r\n\r\n  function addLike(postId) {\r\n    const like = {\r\n      userId: store.currentUserId,\r\n      postId, // make sure you understand this shorthand syntax\r\n      datetime: new Date().toISOString()\r\n    };\r\n\r\n    setStore({\r\n      ...store,// spread props. make sure you understand this\r\n      likes: store.likes.concat(like)\r\n    });\r\n  }\r\n\r\n  function removeLike(postId) {\r\n    setStore({\r\n      ...store,// spread props. make sure you understand this\r\n      likes: store.likes.filter(like => !(like.userId === store.currentUserId && like.postId === postId))\r\n    });\r\n  }\r\n\r\n  function addComment(postId, text) {\r\n    const comment = {\r\n      userId: store.currentUserId,\r\n      postId,\r\n      text,\r\n      datetime: new Date().toISOString()\r\n    };\r\n    setStore({\r\n      ...store,\r\n      comments: store.comments.concat(comment)\r\n    });\r\n  }\r\n\r\n  function addPost(photo, desc) {\r\n    // TODO:\r\n    // 1. Create a new post object (use uniqueId('post') to create an id)\r\n    const newPost = {\r\n      id: uniqueId('post'),\r\n      userId: store.currentUserId,\r\n      photo,\r\n      desc,\r\n      datetime: new Date().toISOString()\r\n    }\r\n    console.log(photo);\r\n    // 2. Update the store \r\n    setStore({\r\n      ...store,\r\n      posts: store.posts.concat(newPost)\r\n    })\r\n  }\r\n\r\n  function addFollower(userId){\r\n      const follower = {\r\n        userId: userId,\r\n        followerId: store.currentUserId\r\n      };\r\n      setStore({\r\n        ...store,\r\n        followers: store.followers.concat(follower)\r\n      });\r\n  }\r\n\r\n  function removeFollower(userId){\r\n    setStore({\r\n      ...store,// spread props. make sure you understand this\r\n      followers: store.followers.filter(follower => !(follower.userId === userId && follower.followerId === store.currentUserId))\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div className={css.container}>\r\n        <Header />\r\n        <main className={css.content}>\r\n          <Switch>\r\n            <Route path='/explore'>\r\n              <Explore store={store} />\r\n            </Route>\r\n            <Route path='/activity'>\r\n              <Activity store={store} />\r\n            </Route>\r\n            <Route path=\"/newpost\">\r\n              <NewPost store={store}\r\n                addPost={addPost}\r\n                />\r\n            </Route>\r\n            <Route path=\"/profile/:userId?\">\r\n              <Profile store={store}\r\n              onFollow={addFollower}\r\n              onUnfollow={removeFollower} />\r\n            </Route>\r\n            <Route path=\"/:postId?\">\r\n              <Home store={store}\r\n                onLike={addLike}\r\n                onUnlike={removeLike}\r\n                onComment={addComment} />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n        <Navbar />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}