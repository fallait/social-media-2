{"version":3,"sources":["components/Post.module.css","components/Navbar.module.css","components/App.module.css","components/Header.module.css","components/Header.js","components/Home.js","components/Explore.js","components/NewPost.js","components/Activity.js","components/Profile.js","components/Navbar.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","css","header","src","alt","Home","Explore","NewPost","Activity","Profile","Navbar","props","handleNavChange","page","console","log","onNavChange","navbar","navItem","onClick","e","App","state","this","setState","container","content","renderMain","setPage","bind","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,mBAAmB,QAAU,sBAAsB,aAAe,2BAA2B,QAAU,sBAAsB,SAAW,uBAAuB,MAAQ,oBAAoB,KAAO,mBAAmB,SAAW,uBAAuB,WAAa,2B,gBCArVD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,0B,gBCA5DD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,QAAU,uB,mBCA/DD,EAAOC,QAAU,CAAC,OAAS,yB,iOCuBZC,MArBf,WACE,OACE,4BAAQC,UAAWC,IAAIC,QACnB,6BACE,gCACE,yBAAKC,IAAI,2FAA2FC,IAAI,aAG5G,6BACE,yBAAKD,IAAI,yFAAyFC,IAAI,UAExG,6BACE,gCACA,yBAAKD,IAAI,4FAA4FC,IAAI,gB,KCkBpGC,MAhCf,WA4BE,OAAO,qCCpBMC,MARf,WACE,OACE,wCCMWC,MARf,WACE,OACE,wCCMWC,MARf,WACE,OACE,yCCMWC,MARf,WACE,OACE,wC,gBCsCWC,MAtCf,SAAgBC,GACZ,SAASC,EAAgBC,GACvBC,QAAQC,IAAI,OAAQF,GACdF,EAAMK,aACNL,EAAMK,YAAYH,GAG1B,OACI,yBAAKb,UAAWC,IAAIgB,QAChB,yBAAKjB,UAAWC,IAAIiB,SAChB,4BAAQC,QAAS,SAAAC,GAAC,OAAER,EAAgB,UAChC,yBAAKT,IAAI,yFAAyFC,IAAI,WAG9G,yBAAKJ,UAAWC,IAAIiB,SAChB,4BAAQC,QAAS,SAAAC,GAAC,OAAER,EAAgB,aAChC,yBAAKT,IAAI,4FAA4FC,IAAI,cAG3G,yBAAKJ,UAAWC,IAAIiB,SACtB,4BAAQC,QAAS,SAAAC,GAAC,OAAER,EAAgB,aAChC,yBAAKT,IAAI,4FAA4FC,IAAI,eAGjH,yBAAKJ,UAAWC,IAAIiB,SAChB,4BAAQC,QAAS,SAAAC,GAAC,OAAER,EAAgB,cAChC,yBAAKT,IAAI,yFAAyFC,IAAI,eAG9G,yBAAKJ,UAAWC,IAAIiB,SAChB,4BAAQC,QAAS,SAAAC,GAAC,OAAER,EAAgB,aAChC,yBAAKT,IAAI,4FAA4FC,IAAI,gBCkB9GiB,E,kDAxCb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACXT,KAAM,QAHS,E,oDAOXA,GACNC,QAAQC,IAAIQ,KAAKC,UACjBD,KAAKC,SAAS,CAAEX,W,iCAEPA,GACT,OAAQA,GACN,IAAK,OACH,OAAO,kBAAC,EAAD,MACT,IAAK,UACH,OAAO,kBAAC,EAAD,MACT,IAAK,WACH,OAAO,kBAAC,EAAD,MACT,IAAK,UACH,OAAO,kBAAC,EAAD,MACT,IAAK,UACH,OAAO,kBAAC,EAAD,MACT,QACE,OAAO,kBAAC,EAAD,S,+BAIX,OACE,yBAAKb,UAAWC,IAAIwB,WAClB,kBAAC,EAAD,MACA,0BAAMzB,UAAWC,IAAIyB,SAClBH,KAAKI,WAAWJ,KAAKD,MAAMT,OAE9B,kBAAC,EAAD,CAAQG,YAAaO,KAAKK,QAAQC,KAAKN,a,GAnC7BO,IAAMC,WCAJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.fad0a719.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3-C8n\",\"header\":\"Post_header__3rPny\",\"user\":\"Post_user__30w6L\",\"content\":\"Post_content__1Sr3E\",\"imgContainer\":\"Post_imgContainer__27z5E\",\"actions\":\"Post_actions__3Qy3R\",\"activity\":\"Post_activity__2717Z\",\"likes\":\"Post_likes__28M09\",\"time\":\"Post_time__iC6DS\",\"comments\":\"Post_comments__2LQKC\",\"addComment\":\"Post_addComment__m7TDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2qib_\",\"navItem\":\"Navbar_navItem__3tI0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1h5gR\",\"content\":\"App_content__2Xkxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3vt5U\"};","import React from 'react';\n// import publicUrl from 'utils/publicUrl';\nimport css from './Header.module.css';\nfunction Header() {\n  return (\n    <header className={css.header}>\n        <div>\n          <button>\n            <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fcamera.svg?v=1614382899995\" alt=\"camera\"/>\n          </button>\n        </div>\n        <div>\n          <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flogo.png?v=1614382900226\" alt=\"logo\"/>\n        </div>\n        <div>\n          <button>\n          <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fmessage.svg?v=1614382900322\" alt=\"message\"/>\n          </button>\n        </div>\n        \n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Post from \"./Post.js\";\nfunction Home() {\n  const post = {\n    user: {\n      id: \"judy\",\n      photo: \"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fuser1.png?v=1614382902520\"\n    },\n    post: {\n      id: \"post-1\",\n      userId: \"judy\",\n      photo: \"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fpost1.png?v=1614382902557\",\n      desc: \"#zootopia #excited\",\n      datetime: \"2020-02-09T22:45:28Z\"\n    },\n    likes: {\n      self: true,\n      count: 1\n    },\n    comments: [\n      {\n        userId: \"nick\",\n        text: \"Welcome to Zootopia!\"\n      },\n      {\n        userId: \"judy\",\n        text: \"Thanks!üòÅLooking forward to meeting you!\"\n      }\n    ]\n  };\n  return <h2>Home</h2>\n\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction Explore() {\n  return (\n    <h2>\n      Explore       \n    </h2>\n  );\n}\n\nexport default Explore;","import React from 'react';\n\nfunction NewPost() {\n  return (\n    <h2>\n      NewPost       \n    </h2>\n  );\n}\n\nexport default NewPost;","import React from 'react';\n\nfunction Activity() {\n  return (\n    <h2>\n      Activity       \n    </h2>\n  );\n}\n\nexport default Activity;","import React from 'react';\n\nfunction Profile() {\n  return (\n    <h2>\n      Profile       \n    </h2>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport css from './Navbar.module.css';\n\n\nfunction Navbar(props) {\n    function handleNavChange(page){\n      console.log('page', page);\n        if (props.onNavChange){\n            props.onNavChange(page);\n        }\n    }\n    return (\n        <nav className={css.navbar}>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"home\")}>\n                    <img src='https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fhome.svg?v=1614382900187' alt=\"Home\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"explore\")}>\n                    <img src='https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fexplore.svg?v=1614382900067' alt=\"Explore\"/>\n                </button>\n            </div>\n\t\t\t\t\t\t            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"newpost\")}>\n                    <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fnewpost.svg?v=1614382900337\" alt=\"New Post\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"activity\")}>\n                    <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flike.svg?v=1614382900207\" alt=\"Activity\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"profile\")}>\n                    <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fprofile.svg?v=1614382900375\" alt=\"Profile\"/>\n                </button>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport css from \"./App.module.css\";\nimport Header from \"./Header.js\";\nimport Home from \"./Home.js\";\nimport Explore from \"./Explore.js\";\nimport NewPost from \"./NewPost.js\";\nimport Activity from \"./Activity.js\";\nimport Profile from \"./Profile.js\";\nimport Navbar from \"./Navbar.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: \"home\"\n    };\n    \n  }\n  setPage(page) {\n    console.log(this.setState);\n    this.setState({ page });\n  }\n  renderMain(page) {\n    switch (page) {\n      case \"home\":\n        return <Home />;\n      case \"explore\":\n        return <Explore />;\n      case \"activity\":\n        return <Activity />;\n      case \"newpost\":\n        return <NewPost />;\n      case \"profile\":\n        return <Profile />;\n      default:\n        return <Home />;\n    }\n  }\n  render() {\n    return (\n      <div className={css.container}>\n        <Header />\n        <main className={css.content}>\n          {this.renderMain(this.state.page)}\n        </main>\n        <Navbar onNavChange={this.setPage.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}