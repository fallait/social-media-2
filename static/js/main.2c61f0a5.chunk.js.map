{"version":3,"sources":["components/Post.module.css","components/NewPost.module.css","components/Navbar.module.css","components/Profile.module.css","components/App.module.css","components/Header.module.css","components/Header.js","utils/publicUrl.js","components/Post.js","utils/timespan.js","components/Home.js","components/Explore.js","components/FileLoader.js","components/NewPost.js","components/Activity.js","components/Profile.js","components/Navbar.js","utils/initialStore.js","utils/uniqueId.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","css","header","src","alt","publicUrl","assetPath","startsWith","process","Post","props","useState","comment","setComment","toggleComment","setToggleComment","post","user","to","id","photo","content","imgContainer","actions","likes","self","onClick","onUnlike","onLike","e","activity","count","comments","userId","desc","map","i","key","text","time","date","seconds","Math","floor","Date","interval","timespan","datetime","toUpperCase","addComment","onSubmit","event","onComment","preventDefault","type","placeholder","value","onChange","target","findUser","store","users","find","findComments","filter","postId","findLikes","postLikes","like","some","currentUserId","length","Home","posts","sort","a","b","Explore","FileLoader","handleDragEnter","bind","handleDrop","handleDragOver","handleDragLeave","stopPropagation","this","onDrop","dragTargetSaved","onDragEnter","dataTransfer","types","includes","onDragOver","onDragLeave","child","React","Children","only","children","cloneElement","PureComponent","NewPost","dragging","setDragging","setDesc","setPhoto","error","setError","message","files","file","size","match","reader","FileReader","onloadend","result","readAsDataURL","dropArea","join","rows","onCancel","addPost","Activity","Profile","userData","d","followers","following","followerId","bio","name","statsNum","statsTitles","Navbar","handleNavChange","page","console","log","onNavChange","navbar","navItem","email","prefix","valueOf","toString","milliseconds","start","getTime","sleep","App","setPage","initialStore","setStore","addLike","toISOString","concat","removeLike","newPost","uniqueId","cancelPost","container","renderMain","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c61f0a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3-C8n\",\"header\":\"Post_header__3rPny\",\"user\":\"Post_user__30w6L\",\"content\":\"Post_content__1Sr3E\",\"imgContainer\":\"Post_imgContainer__27z5E\",\"actions\":\"Post_actions__3Qy3R\",\"activity\":\"Post_activity__2717Z\",\"likes\":\"Post_likes__28M09\",\"time\":\"Post_time__iC6DS\",\"comments\":\"Post_comments__2LQKC\",\"addComment\":\"Post_addComment__m7TDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"NewPost_photo__3ADwB\",\"dropArea\":\"NewPost_dropArea__16uub\",\"dragging\":\"NewPost_dragging__1jFb0\",\"message\":\"NewPost_message__1mugQ\",\"image\":\"NewPost_image__2rlaG\",\"desc\":\"NewPost_desc__2ptNI\",\"actions\":\"NewPost_actions__2IyL0\",\"error\":\"NewPost_error__3uhGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2qib_\",\"navItem\":\"Navbar_navItem__3tI0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Profile_user__2-9NF\",\"bio\":\"Profile_bio__CpSPI\",\"statsNum\":\"Profile_statsNum__1rJQS\",\"statsTitles\":\"Profile_statsTitles__36ivN\",\"posts\":\"Profile_posts__-FmA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1h5gR\",\"content\":\"App_content__2Xkxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3vt5U\"};","import React from 'react';\n// import publicUrl from 'utils/publicUrl';\nimport css from './Header.module.css';\nfunction Header() {\n  return (\n    <header className={css.header}>\n        <div>\n          <button>\n            <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fcamera.svg?v=1614382899995\" alt=\"camera\"/>\n          </button>\n        </div>\n        <div>\n          <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flogo.png?v=1614382900226\" alt=\"logo\"/>\n        </div>\n        <div>\n          <button>\n          <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fmessage.svg?v=1614382900322\" alt=\"message\"/>\n          </button>\n        </div>\n        \n    </header>\n  );\n}\n\nexport default Header;\n","// utils/publicUrl.js\nexport default function publicUrl(assetPath) {\n    return assetPath.startsWith('/') ? process.env.PUBLIC_URL + assetPath : assetPath;\n}","import React, {useState} from \"react\";\nimport css from \"./Post.module.css\";\nimport timespan from \"utils/timespan.js\";\nimport publicUrl from \"utils/publicUrl.js\";\n\n\n\nfunction Post(props) {\n\n  const [comment, setComment] = useState('');\n  const [toggleComment, setToggleComment] = useState(false); // hidden initially\n\n  function handleLike() {\n    props.onLike(props.post.id);\n  }\n\n\n  function handleSubmitComment(event) {\n    props.onComment(props.post.id, comment); // this calls addComment from App.js\n    setComment(''); //reset\n    setToggleComment(false); //close comment box\n    event.preventDefault(); // prevent page refresh\n  }\n\n  function handleUnlike() {\n    props.onUnlike(props.post.id);\n  }\n\n  return (\n    <article className={css.post}>\n      <header className={css.header}>\n        <button className={css.user} to={`/profile/${props.user.id}`}>\n          <img src={publicUrl(props.user.photo)} alt=\"User Profile\" />\n          <span>{props.user.id} </span>\n        </button>\n      </header>\n      <section className={css.content}>\n        <div className={css.imgContainer}>\n          <img src={publicUrl(props.post.photo)} alt=\"Post\" />\n        </div>\n      </section>\n\n      <section className={css.actions}>\n        <button>\n          {props.likes.self ? (\n            <img\n              onClick={handleUnlike}\n              src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Funlike.svg?v=1614382900439\"\n              alt=\"Unlike Action\"\n            />\n          ) : (\n            <img\n              onClick={handleLike}\n              src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flike.svg?v=1614382900207\"\n              alt=\"Like Action\"\n            />\n          )}\n        </button>\n        <button onClick={e => setToggleComment(!toggleComment)}>\n          <img src={publicUrl('/assets/comment.svg')} alt='Comment Action' />\n        </button>\n      </section>\n      <section className={css.activity}>\n        <div className={css.likes}>{props.likes.count} likes</div>\n        <div className={css.comments}>\n          <div>\n            <span>\n              {props.post.userId}\n            </span>\n            <span>{props.post.desc}</span>\n          </div>\n          {props.comments.map((comment, i) => (\n            <div key={i}>\n              <span>\n                {comment.userId}\n              </span>\n              <span>{comment.text}</span>\n            </div>\n          ))}\n        </div>\n        <time className={css.time}>\n          {timespan(props.post.datetime).toUpperCase()} AGO\n        </time>\n      </section>\n      {toggleComment &&\n        <form className={css.addComment} onSubmit={handleSubmitComment}>\n          <input type=\"text\" placeholder=\"Add a comment…\" value={comment} onChange={e => setComment(e.target.value)} />\n          <button type=\"submit\">Post</button>\n        </form>\n      }\n    </article>\n\n  );\n}\n\nexport default Post;\n","// return time elapsed \nexport default (date)=>{\n    var seconds = Math.floor((new Date() - new Date(date)) / 1000);\n\n    var interval = Math.floor(seconds / 31556926);\n  \n    if (interval >= 1) {\n      return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval >= 1) {\n      return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n      return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n      return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n}","import React from \"react\";\nimport Post from \"./Post.js\";\n\nfunction findUser(post, store) {\n  return store.users.find(user => user.id === post.userId);\n}\n\nfunction findComments(post, store) {\n  return store.comments.filter(comment => comment.postId === post.id);\n}\n\nfunction findLikes(post, store) {\n  let postLikes = store.likes.filter(like => like.postId === post.id);\n  return {\n    self: postLikes.some(like => like.userId === store.currentUserId),\n    count: postLikes.length\n  }\n}\n\nfunction Home(props) {\n  const { store } = props; // retrieve store\n  return (\n    <div>\n      {store.posts.sort((a, b) => new Date(b.datetime) - new Date(a.datetime))\n        .map(post =>\n          <Post\n            store = {store}\n            key={post.id}\n            user={findUser(post, store)}\n            post={post}\n            comments={findComments(post, store)}\n            likes={findLikes(post, store)}\n            onLike={props.onLike} \n            onUnlike={props.onUnlike}\n            onComment={props.onComment}\n          />)}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction Explore() {\n  return (\n    <h2>\n      Explore       \n    </h2>\n  );\n}\n\nexport default Explore;","  \nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nclass FileLoader extends PureComponent {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.handleDragEnter = this.handleDragEnter.bind(this);\n\t\tthis.handleDrop = this.handleDrop.bind(this);\n\t\tthis.handleDragOver = this.handleDragOver.bind(this);\n\t\tthis.handleDragLeave = this.handleDragLeave.bind(this);\n\t}\n\thandleDrop(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDrop){\n\t\t\tthis.props.onDrop(e);\n\t\t}\n\t}\n\thandleDragEnter(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tthis.dragTargetSaved=e.target;\n\t\tif (this.props.onDragEnter){\n\t\t\tthis.props.onDragEnter(e);\n\t\t}\n\t}\n\thandleDragOver(e){\n\t\tif (e.dataTransfer.types.includes('Files')===false){\n\t\t\treturn;\n\t\t}\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDragOver){\n\t\t\tthis.props.onDragOver(e);\n\t\t}\n\t}\n\thandleDragLeave(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDragLeave &&  this.dragTargetSaved===e.target){\n\t\t\tthis.props.onDragLeave(e);\n\t\t}\n\t}\n\n\trender () {\n\t\tlet child = React.Children.only(this.props.children);\n\t\treturn  React.cloneElement(child,\n\t\t\t{\t\n\t\t\t\tonDragEnter: this.handleDragEnter,\n\t\t\t\tonDragOver: this.handleDragOver,\n\t\t\t\tonDragLeave: this.handleDragLeave,\n\t\t\t\tonDrop: this.handleDrop\n\n\t\t\t});\n\t\n\t}\n}\n\nFileLoader.propTypes = {\n\tonDrop:PropTypes.func,\n\tonDragEnter:PropTypes.func,\n\tonDragOver:PropTypes.func,\n\tonDragLeave:PropTypes.func,\n\tchildren:PropTypes.element.isRequired,\n};\n\nexport default FileLoader;","import React, { useState } from 'react';\nimport css from './NewPost.module.css';\nimport FileLoader from './FileLoader.js';\n\nfunction NewPost(props) {\n  const [dragging, setDragging] = useState(false); // to show a dragging effect\n  const [desc, setDesc] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [error, setError] = useState(''); // to show an error message\n\n  function handleFileDragEnter(e) {\n    setDragging(true);\n  }\n  function handleFileDragLeave(e) {\n    setDragging(false);\n  }\n  function handleFileDrop(e) {\n    if (e.dataTransfer.types.includes('Files') === false) {\n      return;\n    }\n    if (e.dataTransfer.files.length >= 1) {\n      let file = e.dataTransfer.files[0];\n      if (file.size > 1000000) {// larger than 1 MB\n        return;\n      }\n      if (file.type.match(/image.*/)) {\n        let reader = new FileReader();\n        reader.onloadend = (e) => {\n          // TODO: call setPhoto with e.target.result (this is a Base64 image string)\n          setPhoto(e.target.result)\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n    setDragging(false);\n  }\n  function handleDescChange(e) {\n    // TODO: call setDesc\n    setDesc(e.target.value);\n  }\n  function handleSubmit(e) {\n    // TODO:\n    // 1. Prevent default behavior\n    // 2. Show error msg if failed and exit\n    // 3. Call the storage update function passed from the parent\n    // 3. Clear error msg\n    if (!photo) {\n      setError(\"No photo\");\n      return;\n    }\n    props.addPost(photo, desc);\n    setError(\"\");\n  }\n  function handleCancel() {\n    // TODO: Notify the parent about the cancellation\n    props.onCancel();\n  }\n  return (\n    <div>\n      <div className={css.photo}>\n        {!photo ? <div className={css.message}>Drop your image</div> :\n          <img src={photo} alt=\"New Post\" />}\n        <FileLoader\n          onDragEnter={handleFileDragEnter}\n          onDragLeave={handleFileDragLeave}\n          onDrop={handleFileDrop}\n        >\n          <div className={[css.dropArea, dragging ? css.dragging : null].join(' ')}\n          ></div>\n        </FileLoader>\n\n      </div>\n\n      <div className={css.desc} >\n        <textarea\n          placeholder=\"Describe your post!\"\n          rows=\"3\"\n          value={desc}\n          onChange={handleDescChange}\n        />\n      </div>\n      <div className={css.error}>\n        {error}\n      </div>\n      <div className={css.actions}>\n        <button onClick={handleCancel}>Cancel</button>\n        <button onClick={handleSubmit}>Share</button>\n      </div>\n    </div>\n  );\n}\n\nexport default NewPost;","import React from 'react';\n\nfunction Activity() {\n  return (\n    <h2>\n      Activity       \n    </h2>\n  );\n}\n\nexport default Activity;","import React from 'react';\nimport publicUrl from \"utils/publicUrl.js\";\nimport css from \"./Profile.module.css\";\n\nfunction Profile(props) {\n  const { store } = props; // retrieve store\n  let user = store.currentUserId\n  let userData = store.users.filter(d => d.id === user)[0]\n  let posts = store.posts.filter(d => d.userId === user)\n  let followers = store.followers.filter(d => d.userId === user)\n  let following = store.followers.filter(d => d.followerId === user)\n  return (\n    <div>\n      <header className={css.user}>\n        <img src={publicUrl(userData.photo)} alt=\"Propic\"></img>\n        <span>{userData.id} </span>\n      </header>\n      <section className={css.bio}>\n        <b>{userData.name}</b>\n        <p>{userData.bio}</p>\n      </section>\n      <section className={css.statsNum}>\n        <b>{posts.length}</b>\n        <b>{followers.length}</b>\n        <b>{following.length}</b>\n      </section>\n      <section className={css.statsTitles}>\n        <p>posts</p>\n        <p>followers</p>\n        <p>following</p>\n      </section>\n      <section className={css.posts}>\n        {posts.map(post =>\n          <img src={publicUrl(post.photo)} alt = \"Profile Post\"></img>\n\n        )}\n      </section>\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport css from './Navbar.module.css';\n\n\nfunction Navbar(props) {\n    function handleNavChange(page){\n      console.log('page', page);\n        if (props.onNavChange){\n            props.onNavChange(page);\n        }\n    }\n    return (\n        <nav className={css.navbar}>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"home\")}>\n                    <img src='https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fhome.svg?v=1614382900187' alt=\"Home\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"explore\")}>\n                    <img src='https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fexplore.svg?v=1614382900067' alt=\"Explore\"/>\n                </button>\n            </div>\n\t\t\t\t\t\t            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"newpost\")}>\n                    <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fnewpost.svg?v=1614382900337\" alt=\"New Post\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"activity\")}>\n                    <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Flike.svg?v=1614382900207\" alt=\"Activity\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange(\"profile\")}>\n                    <img src=\"https://cdn.glitch.com/f70d577d-f905-45ee-bb92-042bfa767970%2Fprofile.svg?v=1614382900375\" alt=\"Profile\"/>\n                </button>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","/* sample data store*/\nexport default { \n    currentUserId: \"judy\",\n    users:[\n        {\n            id:\"judy\",\n            email:\"judy@bc.edu\",\n            photo:\"/assets/user1.png\",\n            name: \"Judy Hopps\",\n            bio:\"The first rabbit officer of the Zootopia Police Department. Judy is determined to make the world a better place while breaking preconceptions about other species.\",\n            \n        },\n        {\n            id:\"nick\",\n            email:\"nick@bc.edu\",\n            photo:\"/assets/user2.png\",\n            name:\"Nick Wilde\",\n            bio:\"Nick is a charming, small-time, con artist fox with a big mouth and a lot of opinions. But when a rabbit cop outsmarts him, he finds himself actually helping her solve a mystery.\"\n        },\n\n        {\n            id:\"flash\",\n            email:\"flash@bc.edu\",\n            photo:\"/assets/user3.png\",\n            name: \"Flash Slothmore\",\n            bio:\"Flash is a male three-toed sloth and a supporting character in Zootopia. He works at the Department of Mammal Vehicles.\",\n            \n        }\n    ],\n    followers:[\n        {\n            userId:\"nick\",\n            followerId:\"judy\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"nick\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"flash\"\n        }\n    ],\n    posts:[\n        {   \n            id:\"post-1\",\n            userId:\"judy\",\n            photo:\"/assets/post1.png\",\n            desc:\"#zootopia #excited\",\n            datetime: \"2020-02-09T22:45:28Z\",   \n\n        },\n        {\n            id:\"post-2\",\n            userId:\"nick\",\n            photo:\"/assets/post2.png\",\n            desc:\"#happy #selfie with Judy\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-3\",\n            userId:\"flash\",\n            photo:\"/assets/post3.png\",\n            desc:\"Don't worry I got this\",\n            datetime: \"2020-02-03T22:45:28Z\",\n        },\n        {\n            id:\"post-4\",\n            userId:\"judy\",\n            photo:\"/assets/post4.png\",\n            desc:\"Just trying to make a #friend\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-5\",\n            userId:\"judy\",\n            photo:\"/assets/post5.png\",\n            desc:\"I am now the first rabbit officer!\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-6\",\n            userId:\"judy\",\n            photo:\"/assets/post6.png\",\n            desc:\"Having #goodtimes with folks here\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n    ],\n    comments:[\n        {\n            userId:\"nick\",\n            postId:\"post-1\",\n            text:\"Welcome to Zootopia!\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            text:\"Thanks!😁Looking forward to meeting you!\", \n            datetime:\"2020-02-09T22:52:01Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            text:\"Looking good you two! 🐰🦊\", \n            datetime:\"2020-02-09T22:54:20Z\"\n        }\n    ],\n    likes:[\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            datetime:\"2020-02-09T22:50:40Z\"\n        },\n        {\n            userId:\"nick\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:54:20Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-3\",\n            datetime:\"2020-02-09T22:53:40Z\"\n        }\n    ]\n}\n\n","  \nfunction sleep(milliseconds) {\n\tvar start = new Date().getTime();\n\tfor (var i = 0; i < 1e7; i++) {\n\t\tif ((new Date().getTime() - start) > milliseconds){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default (prefix) => { // TODO use shortid \n\tlet id = new Date().valueOf().toString(36);\n\tsleep(1);// wait for one millisecond\n\treturn (prefix ? prefix + id\t: id);\n};","import React, { useState } from \"react\";\r\n// import logo from './logo.svg';\r\nimport \"./App.css\";\r\nimport css from \"./App.module.css\";\r\nimport Header from \"./Header.js\";\r\nimport Home from \"./Home.js\";\r\nimport Explore from \"./Explore.js\";\r\nimport NewPost from \"./NewPost.js\";\r\nimport Activity from \"./Activity.js\";\r\nimport Profile from \"./Profile.js\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport initialStore from 'utils/initialStore';\r\nimport uniqueId from 'utils/uniqueId'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [page, setPage] = useState('home');\r\n  const [store, setStore] = useState(initialStore);\r\n\r\n  function renderMain(page) {\r\n    switch (page) {\r\n      case \"home\":\r\n        return <Home\r\n          store={store}\r\n          onLike={addLike}\r\n          onUnlike={removeLike}\r\n          onComment={addComment}\r\n        />;\r\n      case \"explore\":\r\n        return <Explore />;\r\n      case \"activity\":\r\n        return <Activity />;\r\n      case \"newpost\":\r\n        return <NewPost \r\n        store = {store}\r\n        addPost={addPost}\r\n        cancelPost={cancelPost}/>;\r\n      case \"profile\":\r\n        return <Profile\r\n          store={store}\r\n        />;\r\n      default:\r\n        return <Home store={store}\r\n          onLike={addLike}\r\n          onUnlike={removeLike} />;\r\n    }\r\n  }\r\n\r\n  function addLike(postId) {\r\n    const like = {\r\n      userId: store.currentUserId,\r\n      postId, // make sure you understand this shorthand syntax\r\n      datetime: new Date().toISOString()\r\n    };\r\n\r\n    setStore({\r\n      ...store,// spread props. make sure you understand this\r\n      likes: store.likes.concat(like)\r\n    });\r\n  }\r\n\r\n  function removeLike(postId) {\r\n    setStore({\r\n      ...store,// spread props. make sure you understand this\r\n      likes: store.likes.filter(like => !(like.userId === store.currentUserId && like.postId === postId))\r\n    });\r\n  }\r\n\r\n  function addComment(postId, text) {\r\n    const comment = {\r\n      userId: store.currentUserId,\r\n      postId,\r\n      text,\r\n      datetime: new Date().toISOString()\r\n    };\r\n    setStore({\r\n      ...store,\r\n      comments: store.comments.concat(comment)\r\n    });\r\n  }\r\n\r\n  function addPost(photo, desc) {\r\n    // TODO:\r\n    // 1. Create a new post object (use uniqueId('post') to create an id)\r\n    const newPost = {\r\n      id: uniqueId('post'),\r\n      userId: store.currentUserId,\r\n      photo,\r\n      desc,\r\n      datetime: new Date().toISOString()\r\n   }\r\n   console.log(photo);\r\n    // 2. Update the store \r\n    setStore({\r\n      ...store,\r\n      posts: store.posts.concat(newPost)\r\n    })\r\n    // 3. Call setPage to come back to the home page\r\n    setPage('home');\r\n  }\r\n  function cancelPost() {\r\n    // TODO:\r\n    // 1. Call setPage to come back to the home page (we will use Router to improve this)\r\n    setPage(\"home\");\r\n  }\r\n  return (\r\n    <div className={css.container}>\r\n      <Header />\r\n      <main className={css.content}>\r\n        {renderMain(page)}\r\n      </main>\r\n      <Navbar onNavChange={setPage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}